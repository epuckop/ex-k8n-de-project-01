# Umbrella chart values for complete monitoring stack

# Enable/disable components
secrets:
  enabled: true

monitoring:
  enabled: true

# Global values passed to subcharts
global:
  # Default namespace (will be overridden by ArgoCD)
  namespace: monitoring

# Values for secrets subchart
monitoring-secrets:
  grafana:
    admin:
      user: admin
      # password: # Set via ArgoCD parameter --helm-set monitoring-secrets.grafana.admin.password=SecurePass123
  
  storage:
    grafana:
      size: "10Gi"
    prometheus: 
      size: "50Gi"
    alertmanager:
      size: "10Gi"
  
  retention:
    prometheus: "30d"
    alertmanager: "120h"
  
  service:
    type: "ClusterIP"  # Change to NodePort via parameter for local development
    grafana:
      nodePort: 30300
    prometheus:
      nodePort: 30090
    alertmanager:
      nodePort: 30093

# Values for monitoring subchart (kube-prometheus-stack)
monitoring-stack:
  kube-prometheus-stack:
    fullnameOverride: "monitoring"
    
    grafana:
      enabled: true
      admin:
        existingSecret: "monitoring-secrets"
        userKey: "grafana-admin-user"
        passwordKey: "grafana-admin-password"
      service:
        type: ClusterIP  # Override via parameter
        port: 80
      persistence:
        enabled: true
        size: 10Gi
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 250m
          memory: 256Mi
      plugins:
        - grafana-piechart-panel
        - grafana-worldmap-panel
        - grafana-clock-panel
      defaultDashboardsEnabled: true
    
    prometheus:
      enabled: true
      service:
        type: ClusterIP
        port: 9090
      prometheusSpec:
        retention: 30d
        retentionSize: 45GB
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        externalLabels:
          cluster: "local-k8s"
          region: "local"
    
    alertmanager:
      enabled: true
      service:
        type: ClusterIP
        port: 9093
      alertmanagerSpec:
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 50m
            memory: 64Mi
        config:
          global:
            smtp_smarthost: 'localhost:587'
            smtp_from: 'alertmanager@k8s.local'
          route:
            group_by: ['alertname']
            group_wait: 10s
            group_interval: 10s
            repeat_interval: 1h
            receiver: 'web.hook'
          receivers:
          - name: 'web.hook'
    
    nodeExporter:
      enabled: true
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 50m
          memory: 64Mi
    
    kubeStateMetrics:
      enabled: true
      resources:
        limits:
          cpu: 100m
          memory: 128Mi
        requests:
          cpu: 50m
          memory: 64Mi
    
    prometheusOperator:
      enabled: true
      resources:
        limits:
          cpu: 200m
          memory: 200Mi
        requests:
          cpu: 100m
          memory: 100Mi
      admissionWebhooks:
        enabled: true
        patch:
          enabled: true
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 50m
              memory: 64Mi
    
    defaultRules:
      create: true
      rules:
        alertmanager: true
        etcd: true
        configReloaders: true
        general: true
        k8s: true
        kubeApiserverAvailability: true
        kubeApiserverBurnrate: true
        kubeApiserverHistogram: true
        kubeApiserverSlos: true
        kubelet: true
        kubeProxy: true
        kubePrometheusGeneral: true
        kubePrometheusNodeRecording: true
        kubernetesApps: true
        kubernetesResources: true
        kubernetesStorage: true
        kubernetesSystem: true
        kubeSchedulerAlerting: true
        kubeSchedulerRecording: true
        kubeStateMetrics: true
        network: true
        node: true
        nodeExporterAlerting: true
        nodeExporterRecording: true
        prometheus: true
        prometheusOperator: true